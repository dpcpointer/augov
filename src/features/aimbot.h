#ifndef AIMBOT_H
#define AIMBOT_H

#include "../game/sdk.h"
#include "config.h"
#include "../overlay/overlay.h"

using namespace std::chrono_literals;

typedef ULONG(NTAPI* NtUserSendInput_t)(
    _In_ ULONG cInputs,
    _In_ LPINPUT pInputs,
    _In_ LONG cbSize
);

inline BYTE hk_jmp[] = {
    0x48, 0xB8, // mov rax, imm64
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // 64-bit address
    0xFF, 0xE0 // jmp rax
};

inline BYTE hk[] = {
    0x48, 0xB8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // mov rax, pSilentAimValues
    0xF2, 0x0F, 0x10, 0x00,                                     // movsd xmm0, [rax]
    0xF2, 0x0F, 0x11, 0x43, 0x10,                              // movsd [rbx+0x10], xmm0
    0x48, 0xB8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // mov rax, retaddress
    0xFF, 0xE0                                                 // jmp rax
};

inline BYTE hk_orig[] = { 0x74, 0x6C, 0xF2, 0x41, 0x0F, 0x10, 0x45, 0x00, 0xF2, 0x0F, 0x11, 0x43, 0x10, 0x41, 0x8B, 0x45, 0x08, 0x89, 0x43, 0x18, 0xF2, 0x41, 0x0F, 0x10, 0x45, 0x0C, 0xF2, 0x0F, 0x11, 0x43, 0x1C, 0x41, 0x8B, 0x45, 0x14, 0x89, 0x43, 0x24, 0x41, 0x8B, 0x45, 0x18, 0x89, 0x43, 0x28, 0xF2, 0x41, 0x0F, 0x10, 0x45, 0x1C };


CS2_OFFSET SILENT_JMP = 0x8D1CF7;
CS2_OFFSET SILENT_OG = 0x8D1CF5;
CS2_OFFSET SILENT_RETURN = 0x8D1D03;

inline class caimbot
{
public:
    NtUserSendInput_t NtUserSendInput;
    float SilentAimValues[4] = { 0.f, 0.f, 0.f, 0.f };
	LPVOID pSilentAimValues;
	LPVOID pSilentAimHook;
    bool pSilentHookInitialized = false;

    Vector_t GetViewAngels();
    void SetCameraPos(Vector_t Position);

    void CleanupSilentHook();
	void think();
}aimbot;

#endif AIMBOT_H